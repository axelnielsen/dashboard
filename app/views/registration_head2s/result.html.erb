<%
txtName=params[:txtName]
txtLastName=params[:txtLastName]
txtAn=params[:txtAn]
txtClub=params[:txtClub]
txtName=params[:txtName]
txtRegion=params[:txtRegion]
arr=params[:competitions]
@lastTrackHead=0
 arr.each do |e|
arrCount=nil
%>
<%=e%>
<%
sqlCompType = "select competition_type_id from competitions where competitions.id="+e+";"   
    arrCompType = ActiveRecord::Base.connection.execute(sqlCompType)
arrCompType.each do |t|
	@CompType=t[0]
	%>

	<%
	if @CompType==1
	@whereHead="track_head2s"
	@whereDetail="track2s"
	elsif @CompType==2
	@whereHead="hjump_head2s"
	@whereDetail="hjump2s"
	elsif @CompType==3
	@whereHead="throw_head2s"
	@whereDetail="throw2s"
	elsif @CompType==4
	@whereHead="jump_head2s"
	@whereDetail="jump2s"		
	end
	end



%>
<%sql = "select count(*) from "+@whereHead.to_s+"  where "+@whereHead.to_s+".competition_id="+e+" ;
"   
    arrCount = ActiveRecord::Base.connection.execute(sql)

arrCount.each do |t|
%>
<%
if t[0]==0 
arrTrackHead2s=nil
@lastTrackHead=nil
sqlTrackHead2s = "insert into "+@whereHead+"(competition_id, serie, created_at, updated_at) values("+e+", 'INSCRITOS', '"+Time.now.strftime('%Y/%m/%d')+"', '"+Time.now.strftime('%Y/%m/%d')+"');"   
    arrTrackHead2s = ActiveRecord::Base.connection.execute(sqlTrackHead2s)
@lastTrackHead=TrackHead2.last.id.to_s
	sqlTrackHead2s="select id from "+@whereHead+" where competition_id="+e+";"
	arrTrackHead2s = ActiveRecord::Base.connection.execute(sqlTrackHead2s)
	arrTrackHead2s.each do |l|
	@lastTrackHead=l[0].to_s
	end
else
	sqlTrackHead2s="select id from "+@whereHead+" where competition_id="+e+";"
	arrTrackHead2s = ActiveRecord::Base.connection.execute(sqlTrackHead2s)
	arrTrackHead2s.each do |l|
	@lastTrackHead=l[0].to_s
	end

end

sqlTrack2s = "insert into "+@whereDetail+" (athlete, "+@whereHead.slice(0 .. -2) +"_id, club, region, created_at, updated_at, an) values('"+txtName+" "+txtLastName+"', "+@lastTrackHead+",'"+txtClub+"', '"+txtRegion+"', '"+Time.now.strftime('%Y/%m/%d')+"', '"+Time.now.strftime('%Y/%m/%d')+"', '"+txtAn+"');"   
    arrCount = ActiveRecord::Base.connection.execute(sqlTrack2s)
%>
<%=sqlTrackHead2s %><br/>
<%=sqlTrack2s%><br/>
<%end%>
<%
 end

%>


Aquí va el mensaje del resultado de la inscripción